package chaussia.shared.gebaeude.produktion;

import chaussia.shared.gebaeude.AbstractGebaeude;
import chaussia.shared.gebaeude.Gebaeude;

public abstract class AbstractProduktionsgebaeude extends AbstractGebaeude implements Produktionsgebaeude
{
    private static final long serialVersionUID = 1L;
    private int               ertrag, anzahlArbeiter;
    private boolean           arbeitet;

    public AbstractProduktionsgebaeude(int unterhaltskosten, int ertrag)
    {
        super(unterhaltskosten);
        this.ertrag = ertrag;
        this.arbeitet = false;
    }

    @Override
    public int getErtrag()
    {
        // lineare Entwicklung proportional zu stufe
        if (this.getBauzeit() <= 0 && this.isArbeitet())
        {
            return this.ertrag * (this.getMaxArbeiter());
        }
        return 0;
    }

    @Override
    public boolean isArbeitet()
    {
        return this.arbeitet;
    }

    @Override
    public void setArbeitet(boolean arbeitet)
    {
        this.arbeitet = arbeitet;
    }
    @Override
    public void addArbeiter()
    {
        // TODO Auto-generated method stub
        
    }
    
    @Override
    public void removeArbeiter()
    {
        // TODO Auto-generated method stub
        
    }

    @Override
    public int getMaxArbeiter()
    {
        return this.getStufe() + 1;
    }

    @Override
    public int getUnterhaltskosten()
    {
        if (this.isArbeitet())
        {
            return super.getUnterhaltskosten();
        }
        return 0;
    }

    @Override
    public Gebaeude upgrade()
    {
        this.resetUpgradedauer();
        return this;
    }

}
