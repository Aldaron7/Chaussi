package chaussia.shared.gebaeude.produktion;

import chaussia.shared.einheiten.produktion.AbstractArbeiter;
import chaussia.shared.gebaeude.AbstractGebaeude;
import chaussia.shared.gebaeude.Gebaeude;
import chaussia.shared.rohstoffe.Rohstoff;

public abstract class AbstractProduktionsgebaeude extends AbstractGebaeude implements Produktionsgebaeude
{
    private static final long serialVersionUID = 1L;
    private int               ertrag           = 10;
    private boolean           arbeitet, besetzt = false;

    public AbstractProduktionsgebaeude()
    {
    }

    @Override
    public boolean isBesetzt()
    {
        return this.besetzt;
    }

    @Override
    public void setBesetzt(boolean besetzt)
    {
        this.besetzt = besetzt;
    }

    @Override
    public int getErtrag()
    {
        // lineare Entwicklung proportional zu stufe
        if (this.getBauzeit() <= 0 && this.isBesetzt() && this.isArbeitet())
        {
            return this.ertrag * (this.getStufe() + 1);
        }
        return 0;
    }

    @Override
    public void setErtrag(int ertrag)
    {
        this.ertrag = ertrag;
    }

    @Override
    public boolean isArbeitet()
    {
        return this.arbeitet;
    }

    @Override
    public void setArbeitet(boolean arbeitet)
    {
        this.arbeitet = arbeitet;
    }

    @Override
    public int getUnterhaltskosten()
    {
        if (this.isArbeitet())
        {
            return super.getUnterhaltskosten();
        }
        return 0;
    }

    @Override
    public Gebaeude upgrade()
    {
        this.setUpgradedauer(3);
        return this;
    }

    @Override
    public abstract Rohstoff getRohstoff();

    @Override
    public abstract Einheit.Typ getArbeiter();
}
